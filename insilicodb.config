{
  "parameters": [

    {
      "name": "test-text",
      "type": "StringParameter",
      "description": "a test to validate strings"
    },

    // index

    {
      "name": "index.kmer-size",
      "type": "IntegerParameter",
      "description": "k-mer (odd) length (default: 31, max value: 31)"
    },
    {
      "name": "index.make-unique",
      "type": "BooleanParameter",
      "description": "Replace repeated target names with unique names"
    }
    {
      "name": "index.files",
      "type": "FilesParameter",
      "description": "FASTA files",
      "required": true
    },


    // quant

    {
      "name": "quant.index",
      "type": "FileParameter",
      "description": "Filename for the kallisto index to be used for quantification"
    },
    {
      "name": "quant.files",
      "type": "FilesParameter",
      "description": "FASTQ files",
      "required": true
    },
    {
      "name": "quant.bias",
      "type": "BooleanParameter",
      "description": "Perform sequence based bias correction"
    },
    {
      "name": "quant.bootstrap-samples",
      "type": "IntegerParameter",
      "description": "Number of bootstrap samples (default: 0)"
    },
    {
      "name": "quant.seed",
      "type": "IntegerParameter",
      "description": "Seed for the bootstrap sampling (default: 42)"
    },
    {
      "name": "quant.single",
      "type": "BooleanParameter",
      "description": "Quantify single-end reads"
    },
    {
      "name": "quant.fragment-length",
      "type": "DoubleParameter",
      "description": "Estimated average fragment length"
    },
    {
      "name": "quant.standard-deviation",
      "type": "DoubleParameter",
      "description": "Estimated standard deviation of fragment length (default: value is estimated from the input data)"
    },
    {
      "name": "quant.threads",
      "type": "IntegerParameter",
      "description": "Number of threads to use (default: 1)"
    },
    {
      "name": "quant.pseudobam",
      "type": "BooleanParameter",
      "description": "Output pseudoalignments in SAM format to stdout"
    }
  ]
}